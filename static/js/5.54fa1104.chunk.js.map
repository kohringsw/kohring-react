{"version":3,"sources":["components/Contact/index.js"],"names":["ContactForm","useForm","register","handleSubmit","reset","errors","formState","onSubmit","data","a","name","email","subject","message","templateParams","emailjs","send","process","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","console","log","id","noValidate","type","required","value","maxLength","placeholder","pattern","rows"],"mappings":"4MAqLeA,UAhLK,WAAO,IAAD,EAMpBC,cAJFC,EAFsB,EAEtBA,SACAC,EAHsB,EAGtBA,aACAC,EAJsB,EAItBA,MACaC,EALS,EAKtBC,UAAaD,OAkBTE,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEPC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,MAAOC,EAAqBJ,EAArBI,QAASC,EAAYL,EAAZK,QAFf,SAIPC,EAAiB,CACrBJ,OACAC,QACAC,UACAC,WARW,SAWPE,IAAQC,KACZC,kBACAA,mBACAH,EACAG,8BAfW,OAkBbb,IA/BFc,YAAM,wBAAyB,CAC7BC,SAAU,eACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,UAAW,yCACXC,QAAS,gBAKI,gDAqBbC,QAAQC,IAAR,MArBa,yDAAH,sDAyBd,OACE,sBAAKH,UAAU,WAAf,UACE,qBAAKA,UAAU,wCAAf,SACE,oBAAIA,UAAU,oCAAd,8BAGF,qBAAKA,UAAU,OAAf,SACE,iVAQF,8BACE,qBAAKA,UAAU,gCAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEI,GAAG,eACHtB,SAAUJ,EAAaI,GACvBuB,YAAU,EAHZ,UAME,gCACE,sBAAKL,UAAU,WAAf,UACE,+CACEM,KAAK,OACLrB,KAAK,QACDR,EAAS,OAAQ,CACnB8B,SAAU,CACRC,OAAO,EACPpB,QAAS,0BAEXqB,UAAW,CACTD,MAAO,GACPpB,QAAS,uCAVf,IAaEY,UAAU,yBACVU,YAAY,UAEb9B,EAAOK,MACN,sBAAMe,UAAU,yBAAhB,SACGpB,EAAOK,KAAKG,aAInB,sBAAKY,UAAU,WAAf,UACE,+CACEM,KAAK,QACLrB,KAAK,SACDR,EAAS,QAAS,CACpB8B,UAAU,EACVI,QAAS,+EALb,IAOEX,UAAU,yBACVU,YAAY,mBAEb9B,EAAOM,OACN,sBAAMc,UAAU,oBAAhB,sDAON,8BACE,sBAAKA,UAAU,WAAf,UACE,+CACEM,KAAK,OACLrB,KAAK,WACDR,EAAS,UAAW,CACtB8B,SAAU,CACRC,OAAO,EACPpB,QAAS,0BAEXqB,UAAW,CACTD,MAAO,GACPpB,QAAS,0CAVf,IAaEY,UAAU,yBACVU,YAAY,aAEb9B,EAAOO,SACN,sBAAMa,UAAU,oBAAhB,SACGpB,EAAOO,QAAQC,eAMxB,8BACE,sBAAKY,UAAU,WAAf,UACE,kDACEY,KAAM,EACN3B,KAAK,WACDR,EAAS,UAAW,CACtB8B,UAAU,KAJd,IAMEP,UAAU,yBACVU,YAAY,aAEb9B,EAAOQ,SACN,sBAAMY,UAAU,oBAAhB,yCAMN,wBACEA,UAAU,kEACVM,KAAK,SAFP,yBAQJ,cAAC,IAAD","file":"static/js/5.54fa1104.chunk.js","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport emailjs from \"emailjs-com\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nconst ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  // Function that displays a success toast on bottom right of the page when form submission is successful\n  const toastifySuccess = () => {\n    toast(\"Form sent, thank you!\", {\n      position: \"bottom-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: \"submit-feedback success red-background\",\n      toastId: \"notifyToast\",\n    });\n  };\n\n  // Function called on submit that uses emailjs to send email of valid contact form\n  const onSubmit = async (data) => {\n    // Destrcture data object\n    const { name, email, subject, message } = data;\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message,\n      };\n\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"mb-5 col\">\n      <div className=\"contact d-flex justify-content-center\">\n        <h1 className=\"m-5 font-weight-light text-center\">CONTACT SHELBY</h1>\n      </div>\n\n      <div className=\"mx-5\">\n        <p>\n          What design needs do you have for your business or organization?\n          Whether it's a new logo or rebranding an existing one, building a new\n          website or updating what you have now—whatever it is you're looking\n          for—reach out to Shelby to get the conversation started. Just use the\n          contact form below.\n        </p>\n      </div>\n      <div>\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"col-12\">\n            <div className=\"contactForm mx-3\">\n              <form\n                id=\"contact-form\"\n                onSubmit={handleSubmit(onSubmit)}\n                noValidate\n              >\n                {/* Row 1 and 2 of form */}\n                <div>\n                  <div className=\"col my-4\">\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      {...register(\"name\", {\n                        required: {\n                          value: true,\n                          message: \"Please enter your name\",\n                        },\n                        maxLength: {\n                          value: 30,\n                          message: \"Please use 30 characters or less\",\n                        },\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Name\"\n                    ></input>\n                    {errors.name && (\n                      <span className=\"errorMessage pl-2 pl-2\">\n                        {errors.name.message}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"col mb-4\">\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      {...register(\"email\", {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Email address\"\n                    ></input>\n                    {errors.email && (\n                      <span className=\"errorMessage pl-2\">\n                        Please enter a valid email address\n                      </span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div>\n                  <div className=\"col mb-4\">\n                    <input\n                      type=\"text\"\n                      name=\"subject\"\n                      {...register(\"subject\", {\n                        required: {\n                          value: true,\n                          message: \"Please enter a subject\",\n                        },\n                        maxLength: {\n                          value: 75,\n                          message: \"Subject cannot exceed 75 characters\",\n                        },\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Subject\"\n                    ></input>\n                    {errors.subject && (\n                      <span className=\"errorMessage pl-2\">\n                        {errors.subject.message}\n                      </span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 4 of form */}\n                <div>\n                  <div className=\"col mb-4\">\n                    <textarea\n                      rows={7}\n                      name=\"message\"\n                      {...register(\"message\", {\n                        required: true,\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Message\"\n                    ></textarea>\n                    {errors.message && (\n                      <span className=\"errorMessage pl-2\">\n                        Please enter a message\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <button\n                  className=\"contact-button btn btn-block btn-secondary mt-4 ml-3 text-white\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n            <ToastContainer />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"sourceRoot":""}